!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/45968eff/
<Plug>ChangeCommentary	plugin/commentary.vim	/^nnoremap <silent> <Plug>ChangeCommentary c:<C-U>call <SID>textobject(1)<CR>$/;"	m
<Plug>Commentary	plugin/commentary.vim	/^nnoremap <expr>   <Plug>Commentary     <SID>go()$/;"	m
<Plug>Commentary	plugin/commentary.vim	/^onoremap <silent> <Plug>Commentary        :<C-U>call <SID>textobject(get(v:, 'operator', '') ==#/;"	m
<Plug>Commentary	plugin/commentary.vim	/^xnoremap <expr>   <Plug>Commentary     <SID>go()$/;"	m
<Plug>CommentaryLine	plugin/commentary.vim	/^nnoremap <expr>   <Plug>CommentaryLine <SID>go() . '_'$/;"	m
<Plug>CommentaryUndo	plugin/commentary.vim	/^nmap <silent> <Plug>CommentaryUndo :echoerr "Change your <Plug>CommentaryUndo map to <Plug>Comme/;"	m
Commentary	plugin/commentary.vim	/^command! -range -bar Commentary call s:go(<line1>,<line2>)$/;"	c
FAQ	README.markdown	/^## FAQ$/;"	s
Installation	README.markdown	/^## Installation$/;"	s
License	README.markdown	/^## License$/;"	s
Self-Promotion	README.markdown	/^## Self-Promotion$/;"	s
cgc	plugin/commentary.vim	/^    nmap cgc <Plug>ChangeCommentary$/;"	m
commentary.vim	README.markdown	/^# commentary.vim$/;"	c
g:loaded_commentary	plugin/commentary.vim	/^let g:loaded_commentary = 1$/;"	v
gc	plugin/commentary.vim	/^  nmap gc  <Plug>Commentary$/;"	m
gc	plugin/commentary.vim	/^  omap gc  <Plug>Commentary$/;"	m
gc	plugin/commentary.vim	/^  xmap gc  <Plug>Commentary$/;"	m
gcc	plugin/commentary.vim	/^  nmap gcc <Plug>CommentaryLine$/;"	m
gcu	plugin/commentary.vim	/^  nmap gcu <Plug>Commentary<Plug>Commentary$/;"	m
s:go	plugin/commentary.vim	/^function! s:go(...) abort$/;"	f
s:strip_white_space	plugin/commentary.vim	/^function! s:strip_white_space(l,r,line) abort$/;"	f
s:surroundings	plugin/commentary.vim	/^function! s:surroundings() abort$/;"	f
s:textobject	plugin/commentary.vim	/^function! s:textobject(inner) abort$/;"	f
